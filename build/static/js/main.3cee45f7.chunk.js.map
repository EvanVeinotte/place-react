{"version":3,"sources":["index.js"],"names":["Pixel","className","style","backgroundColor","this","props","React","Component","Board","state","pixels","Array","fill","fetch","then","res","json","syncPixels","setTimeout","fetchData","bind","data","setState","matrix","x","y","key","toString","pixel_array","i","push","renderPixel","pixel_matrix","renderRow","renderBoard","Page","href","ReactDom","render","document","getElementById"],"mappings":"8OAOMA,G,6KAEF,OACE,yBAAKC,UAAU,QAAQC,MAAO,CAACC,gBAAiBC,KAAKC,MAAMF,uB,GAH7CG,IAAMC,YAUpBC,E,kDAEJ,WAAYH,GAAO,IAAD,8BAChB,cAAMA,IACDI,MAAQ,CACXC,OAAQC,MAlBA,IAkBaC,KAAKD,MAjBjB,IAiB+BC,KAAK,aAH/B,E,wDAON,IAAD,OACTC,MAAM,kCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAI,EAAKC,WAAWD,EAAM,MAEpCE,WAAWd,KAAKe,UAAUC,KAAKhB,MAAO,O,iCAG7BiB,GAETjB,KAAKkB,SAAS,CAACZ,OAAQW,EAAKE,W,kCAGlBC,EAAGC,GACb,OAAO,kBAACzB,EAAD,CAAO0B,IAAKF,EAAEG,WAAaF,EAAEE,WAAYxB,gBAAiBC,KAAKK,MAAMC,OAAOc,GAAGC,O,gCAG9ED,GAER,IADA,IAAII,EAAc,GACTC,EAAE,EAAGA,EAzCJ,GAyCaA,IACrBD,EAAYE,KAAK1B,KAAK2B,YAAYP,EAAGK,IAGvC,OAAO,yBAAK5B,UAAU,MAAMyB,IAAKF,GAAII,K,oCAKrC,IADA,IAAII,EAAe,GACVH,EAAE,EAAGA,EAjDH,GAiDaA,IACtBG,EAAaF,KAAK1B,KAAK6B,UAAUJ,IAGnC,OAAOG,I,0CAIP5B,KAAKe,c,+BAIL,OACE,yBAAKlB,UAAU,mBACb,yBAAKA,UAAU,YACZG,KAAK8B,oB,GApDI5B,IAAMC,WA6DpB4B,E,uKAEF,OACE,6BACE,yBAAKlC,UAAU,aAAf,YAAsC,uBAAGmC,KAAK,+BAAR,+BAAtC,uBACA,kBAAC5B,EAAD,W,GALWF,IAAMC,WAWzB8B,IAASC,OACP,kBAACH,EAAD,MACAI,SAASC,eAAe,W","file":"static/js/main.3cee45f7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\n\nconst WIDTH = 32;\nconst HEIGHT = 32;\n\nclass Pixel extends React.Component {\n  render(){\n    return(\n      <div className='pixel' style={{backgroundColor: this.props.backgroundColor}}>\n\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      pixels: Array(WIDTH).fill(Array(HEIGHT).fill('#000000'))\n    };\n  }\n\n  fetchData(){\n    fetch('http://vino0244.xyz/place/data')\n    .then(res => res.json())\n    .then(json => this.syncPixels(json, this));\n  \n    setTimeout(this.fetchData.bind(this), 3000);\n  }\n\n  syncPixels(data){\n    //console.log('syncing');\n    this.setState({pixels: data.matrix});\n  }\n\n  renderPixel(x, y){\n    return <Pixel key={x.toString() + y.toString()} backgroundColor={this.state.pixels[x][y]}/>\n  }\n\n  renderRow(x){\n    let pixel_array = [];\n    for (let i=0; i<WIDTH; i++){\n      pixel_array.push(this.renderPixel(x, i));\n    }\n\n    return <div className=\"row\" key={x}>{pixel_array}</div>;\n  }\n\n  renderBoard(){\n    let pixel_matrix = [];\n    for (let i=0; i<HEIGHT; i++){\n      pixel_matrix.push(this.renderRow(i));\n    }\n\n    return pixel_matrix;\n  }\n\n  componentDidMount(){\n    this.fetchData();\n  }\n\n  render(){\n    return (\n      <div className=\"board-container\">\n        <div className=\"theboard\">\n          {this.renderBoard()}\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nclass Page extends React.Component{\n  render(){\n    return(\n      <div>\n        <div className=\"title-txt\">Visit&nbsp;<a href=\"https://twitch.tv/vino0244/\">https://twitch.tv/vino0244/</a>&nbsp;to participate!</div>\n        <Board />\n      </div>\n    );\n  }\n}\n\nReactDom.render(\n  <Page />,\n  document.getElementById('root')\n);"],"sourceRoot":""}